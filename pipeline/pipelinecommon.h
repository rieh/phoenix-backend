#pragma once

#include <QObject>
#include <QOpenGLFramebufferObject>
#include <QAudioFormat>
#include <QImage>

/*
 * Structures usable by all nodes
 */

// Type of video output (for use by video consumers)
enum VideoRendererType {

    // Video is generated by the CPU and lives in RAM
    SOFTWARERENDER = 0,

    // Video is generated by the GPU and lives in an FBO
    HARDWARERENDER

};

struct LibretroVideoFormat {
    LibretroVideoFormat() = default;
    ~LibretroVideoFormat() = default;

    qreal videoAspectRatio{ 1.0 };
    size_t videoBytesPerLine{ 0 };
    size_t videoBytesPerPixel{ 0 };
    // FIXME: Default to 0
    qreal videoFramerate{ 60.0 };
    VideoRendererType videoMode{ SOFTWARERENDER };
    // FIXME: Default to invalid
    QImage::Format videoPixelFormat{ QImage::Format_RGB16 };
    QSize videoSize;
};
Q_DECLARE_METATYPE( size_t )
Q_DECLARE_METATYPE( LibretroVideoFormat )

typedef QMap<QString, QString> QStringMap;
Q_DECLARE_METATYPE( QStringMap )
