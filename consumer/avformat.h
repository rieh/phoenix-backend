#ifndef AVFORMAT_H
#define AVFORMAT_H

#include <QAudioFormat>
#include <QImage>
#include <QVariant>

struct AVFormat {
    AVFormat() = default;
    ~AVFormat() = default;

    enum VideoRendererType {

        // Video is generated by the CPU and lives in RAM
        SoftwareRenderer = 0,

        // Video is generated by the GPU and lives in an FBO
        HardwareRenderer,

    };


    // "libretro", etc.
    QString producerType;

    // Audio

    QAudioFormat audioFormat;

    // If audio data is sent at a regular rate, but the amount is too much/insufficient to keep the buffer from
    // over/underflowing, stretch the incoming audio data by this factor to compensate
    // In Libretro cores, this factor compensates for the emulation rate differing from the console's native framerate
    // if using VSync, for example
    // The ratio is hostFPS / coreFPS
    qreal audioRatio{ 1.0 };

    // Video

    qreal videoAspectRatio{ 1.0 };
    size_t videoBytesPerLine{ 0 };
    size_t videoBytesPerPixel{ 0 };
    qreal videoFramerate{ 60.0 };
    VideoRendererType videoMode{ SoftwareRenderer };
    QImage::Format videoPixelFormat{ QImage::Format_RGB16 };
    QSize videoSize{ 720, 480 };

};

Q_DECLARE_METATYPE( AVFormat )

#endif // AVFORMAT_H
